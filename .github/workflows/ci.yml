# GitHub Actions configuration **EXAMPLE**,
# MODIFY IT ACCORDING TO YOUR NEEDS!
# Reference: https://docs.github.com/en/actions

name: tests

on:
  push:
    # Avoid using all the resources/limits available by checking only
    # relevant branches and tags. Other branches can be checked via PRs.
    branches: [master]
    tags: ["v[0-9]*", "[0-9]+.[0-9]+*"] # Match tags that resemble a version
  pull_request: # Run in every PR
  workflow_dispatch: # Allow manually triggering the workflow
  schedule:
    # Run roughly every 15 days at 00:00 UTC
    # (useful to check if updates on dependencies break the package)
    - cron: "0 0 1,16 * *"

permissions:
  contents: read

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Configure Conda
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a

      - name: Install Dependencies
        run: |
          conda install --yes pip pytest coverage
          conda install conda-build

      - name: Build Package
        run: |
          conda build --output-folder dist .
          ls -R dist/

      - name: Install Built Package
        run: |
          conda create -n testenv --yes --file dist/*.tar.bz2

      - name: Run Tests
        env:
          PYTHONPATH: $PYTHONPATH:${GITHUB_WORKSPACE}
        run: |
          pytest --cov=myproject --cov-report=xml:coverage.xml --junitxml=test-results.xml --cov-report=html

      - name: Generate Coverage Report
        run: coverage xml -o coverage.lcov

      - name: Upload Coverage Report
        uses: coverallsapp/github-action@master
        with:
          path-to-lcov: coverage.lcov
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: ${{ matrix.os }} - py${{ matrix.python-version }}
          parallel: true
      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  finalize-coverage:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Finalize Coverage Report
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  publish-to-conda-forge:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}

      - name: Configure Conda
        run: |
          conda config --set always_yes yes --set changeps1 no
          conda update -q conda
          conda info -a

      - name: Install Dependencies
        run: |
          conda install pip conda-build conda-forge-tools anaconda-client

      - name: Build Package
        run: |
          conda build --output-folder dist .
          ls -R dist/

      - name: Upload Package to Anaconda
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |
          anaconda login --token $ANACONDA_API_TOKEN
          anaconda upload --user conda-forge --label main --skip-existing dist/*.tar.bz2
